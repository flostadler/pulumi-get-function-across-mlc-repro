// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

import * as pulumiAws from "@pulumi/aws";

import {BucketComponent} from "./index";

/**
 * The BucketObjectComponent component offers a simple interface for creating an S3 bucket object.
 */
export class BucketObjectComponent extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'flo-test:index:BucketObjectComponent';

    /**
     * Returns true if the given object is an instance of BucketObjectComponent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BucketObjectComponent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BucketObjectComponent.__pulumiType;
    }

    /**
     * The underlying S3 BucketObject resource.
     */
    public /*out*/ readonly bucketObject!: pulumi.Output<pulumiAws.s3.BucketObject>;

    /**
     * Create a BucketObjectComponent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BucketObjectComponentArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.bucketComponent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucketComponent'");
            }
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            if ((!args || args.value === undefined) && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["bucketComponent"] = args ? args.bucketComponent : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
            resourceInputs["bucketObject"] = undefined /*out*/;
        } else {
            resourceInputs["bucketObject"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BucketObjectComponent.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a BucketObjectComponent resource.
 */
export interface BucketObjectComponentArgs {
    /**
     * The BucketComponent to use for the bucket object.
     */
    bucketComponent: pulumi.Input<BucketComponent>;
    /**
     * The key of the object in the bucket.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the object in the bucket.
     */
    value: pulumi.Input<string>;
}
